name: ConsumerCI

on:
  workflow_dispatch:
  push:
    paths:
      - 'smartbearcoin-payments-ui/**'
      - '.github/workflows/ConsumerCI.yml'
      - 'oas/**'
  pull_request:
    branches: ['main']
    paths:
      - 'smartbearcoin-payments-ui/**'
      - '.github/workflows/ConsumerCI.yml'
      - 'oas/**'

env:
  version: ${{ github.sha }}
  PACT_BROKER_BASE_URL: https://smartbear.pactflow.io
  PACT_BROKER_TOKEN: ${{ secrets.PACT_BROKER_TOKEN }}
  application_name: SmartBearCoin-Payments-UI
  application_folder: smartbearcoin-payments-ui

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - run: cd ${{ env.application_folder }} && npm ci
      - run: cd ${{ env.application_folder }} && npm test
      - uses: pactflow/actions/publish-pact-files@v1.0.1
        env:
          pactfiles: ${{ env.application_folder }}/pacts

  can-i-deploy-to-test:
    needs: [test]
    runs-on: ubuntu-latest
    env:
      deploy_target: test
    steps:
      - name: can-i-deploy ${{ env.application_name }} to ${{ env.deploy_target }}
        uses: pactflow/actions/can-i-deploy@v1.0.1
        env:
          to_environment: ${{ env.deploy_target }}

  can-i-deploy-to-production:
    needs: [test]
    runs-on: ubuntu-latest
    env:
      deploy_target: production
    steps:
      - name: can-i-deploy ${{ env.application_name }} to ${{ env.deploy_target }}
        uses: pactflow/actions/can-i-deploy@v1.0.1
        env:
          to_environment: ${{ env.deploy_target }}

  deploy-to-test:
    if: github.ref == 'refs/heads/main'
    needs: [can-i-deploy-to-test]
    runs-on: ubuntu-latest
    env:
      deploy_target: test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Build site
        run: |
          cd ${{ env.application_folder }}
          npm ci
          npm run build
      - name: Deploy website to ${{ env.deploy_target }} environment
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: './${{ env.application_folder }}/build'
          alias: ${{ env.deploy_target }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: 'Deploy from GitHub Actions'
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
      - name: record-deployment ${{ env.application_name }} to ${{ env.deploy_target }}
        uses: pactflow/actions/record-deployment@v1.0.1
        env:
          environment: ${{ env.deploy_target }}

  deploy-to-production:
    if: github.ref == 'refs/heads/main'
    needs: [can-i-deploy-to-production, deploy-to-test]
    runs-on: ubuntu-latest
    env:
      deploy_target: production
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Build site
        run: |
          cd ${{ env.application_folder }}
          npm ci
          npm run build
      - name: Deploy website to ${{ env.deploy_target }} environment
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: './${{ env.application_folder }}/build'
          production-branch: main
          production-deploy: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: 'Deploy from GitHub Actions'
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
      - name: record-deployment ${{ env.application_name }} to ${{ env.deploy_target }}
        uses: pactflow/actions/record-deployment@v1.0.1
        env:
          environment: ${{ env.deploy_target }}
