openapi: 3.0.3
info:
  title: SmartBearCoin - Payees API
  description: |
    The **Customer Managment - Payees API** - allows retrieval of payees and payee transactions. The Payees API allows consumers to search, identify and retrieve payee information in one specified country.
    Customer centricity is part of the DNA of SmartBearCoin. Therefore, Customer Management (CM) is considered a core business capability. The focus of CM is outward focused on enabling a consistent, digital customer experience, throughout the customer journey and across channels (omnichannel). This leads to measurable improvements of customer satisfaction and the increase of sales volume and/or margin.
    Value exposed through Customer Management capabilities is build upon an API-First strategy at SmartBearCoin.
  termsOfService: http://swagger.io/terms/
  contact:
    email: customer.management.apiteam@smartbearcoin.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/mhiggins-sa/payee-api/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://api.smartbearcoin.com/customer-management/v1/payees
tags:
- name: Customer Management - Payees
  description: Customer Management Payee Capability APIs
- name: Customer Management - Payee Transactions
  description: Customer Management Payee Transactions APIs
paths:
  /:
    get:
      tags:
      - Customer Management - Payees
      summary: Get a list of Payees based on specified country and additional criteria
      description: "This API method supports searching and identifying payees within\
        \ a specified country.\nSearch results will be sorted on highest confidence\
        \ matching level.\n#### Search/Filter criteria\nThe following search criteria\
        \ are supported to identify an payee registered within our customer management\
        \ domain and within a specified country:\n- search based on the 9 digit unique\
        \ duns number; DUNS is abbreviation of data universal numbering system issued\
        \ by Dun & Bradstreet\n- search based on jurisdiction identifier and type\
        \ (e.g. company identifier in a specific country); examples are chamber of\
        \ commerce number or KVK (NL), Siret (FR), CIF (ES), VAT Number (BE), Tax\
        \ Number (US) and Company Registration Number (GB)\n- search based on name\n\
        - search based on name and address\n  - address search criteria are postalCode,\
        \ city, region and address line (street, house number, house number addition,\
        \ building name)\nThe following validation rules apply while providing the\
        \ search criteria:\n- the `country_of_registration` is required\n  - at least\
        \ one of the other search criteria must be provided\n- if `duns_number` is\
        \ provided, no other criteria are allowed\n- if `jurisdiction_identifier`\
        \ is provided, no other criteria are allowed\n- the `name` is required if\
        \ either of `duns_number` or `jurisdiction_identifier` is not provided\n####\
        \ Jurisdiction Identifier types  \nThe jurisdiction identifier types that\
        \ are supported per country, and default applied if not explicitly provided\
        \ are as detailed below. \n| Country Code | Country  | Supported | Default\
        \ |\n|--------------|----------|-----------|---------|        \n|   BE   \
        \ |Belgium|vat-number|vat-number|        \n|   ES    |Spain|cif, nif|cif|\n\
        |   FR    |France|siret|siret|\n|   GB    |United Kingdom|organization-number|organization-number|\n\
        |   IE    |Ireland|organization-number|organization-number|\n|   IT    |Italy|fiscal-code|fiscal-code|\n\
        |   NL    |Netherlands|chamber-of-commerce-number|chamber-of-commerce-number|\n\
        |   PT    |Portugal|cif, nif|cif|\n|   US    |United States|tax-number, ssn|tax-number|\n\
        \n#### Pagination & Sorting\nThis resource collection API supports both pagination\
        \ and sorting of returned resources. Please refer to the our [**API Standards\
        \ & Guidelines**](https://github.com/SmartBear/api-standards-and-guidelines#pagination)\
        \ to find out how to use the `page`, `page_size`, and `sort` request parameters\
        \ to sort or paginate the returned payees.\n"
      operationId: getPayees
      parameters:
      - name: country_of_registration
        in: query
        description: "The country in which the legalentity is registered, expressed\
          \ in official (ISO) two-letter country code."
        required: true
        schema:
          pattern: "^[a-zA-Z]{2}$"
          type: string
      - name: jurisdiction_identifier
        in: query
        description: Search with unique jurisdiction identifier. The complete identifier
          value must be provided.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "06488522"
      - name: jurisdiction_identifier_type
        in: query
        description: "Filter by jurisdiction type, if not provided the type will be\
          \ defaulted based upon the `country_of_registration`.            \n"
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - chamber-of-commerce-number
          - siret
          - fiscal-code
          - vat-number
          - cif
          - nif
          - tax-number
          - ssn
          - company-number
      - name: name
        in: query
        description: |
          Search with company/trading name (_Like_ Search). Required if `jurisdiction_identifier` is not provided. At least 2 characters must be provided.
        required: false
        style: form
        explode: true
        schema:
          minLength: 2
          type: string
      - name: page
        in: query
        description: Requests a specific page number to retrieve.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
      - name: sort
        in: query
        description: "List attribute names that must be sorted, separated by commas.\
          \ \nSorting in ascending order by default; field names appended with the\
          \ minus sign (-) are sorted in descending order.\nAttributes that can be\
          \ used for sorting are:\n  - name\n"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: x-Authorization
        in: header
        description: Contains the OAuth 2.0 ClientCredentials or AuthorizationCode
          Bearer Token to make authenticated/authorized API calls.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
              examples:
                Missing conditionally required request parameter:
                  value:
                    code: "4000020"
                    status: 400
                    type: https://api.smartbearcoin.com/problems/missing-request-parameter
                    title: missing-request-parameter
                    details:
                    - type: https://api.smartbearcoin.com/problems/missing-request-parameter
                      title: missing-request-parameter
                      detail: "The request does not contain the conditionally required\
                        \ parameter 'name', when 'jurisdiction_identifier' is not\
                        \ provided."
                      contextData:
                      - path: /name
                        condition: jurisdiction_identifier == null
                Invalid request parameter format:
                  value:
                    code: "4000022"
                    status: 400
                    type: https://api.smartbearcoin.com/problems/invalid-request-parameter-format
                    title: invalid-request-parameter-format
                    details:
                    - type: https://api.smartbearcoin.com/problems/invalid-request-parameter-format
                      title: invalid-request-parameter-format
                      detail: "The provided value [Ireland] for parameter 'country_of_registration'\
                        \ does not have the expected format."
                      contextData:
                      - path: /country_of_registration
                        providedValue: Ireland
                        allowedFormat: "^[a-zA-Z]{2}$"
                Invalid request parameter value:
                  value:
                    code: "4000023"
                    status: 400
                    type: https://api.smartbearcoin.com/problems/invalid-request-parameter-value
                    title: invalid-request-parameter-value
                    details:
                    - type: https://api.smartbearcoin.com/problems/invalid-request-parameter-value
                      title: invalid-request-parameter-value
                      detail: "The provided value [vat-number] for parameter 'jurisdiction_identifier_type'\
                        \ in country_of_registration [IT] is not allowed. The allowed\
                        \ values are [fiscal-code]."
                      contextData:
                      - path: /jurisdiction_identifier_type
                        providedValue: vat-number
                        allowedValues:
                        - fiscal-code
        "401":
          description: 401 Unauthorized
        "405":
          description: 405 Method Not Allowed
        "429":
          description: 429 Too Many Requests
        "500":
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
              examples:
                Internal Server Error due to a technical failure:
                  value:
                    code: "5000001"
                    status: 500
                    type: https://api.smartbearcoin.com/problems/internal-server-error
                    title: internal-server-error
                    details:
                    - type: https://api.smartbearcoin.com/problems/internal-server-error
                      title: internal-server-error
                      detail: The server encountered an internal error and was unable
                        to complete your request.
        "503":
          description: 503 Service Not Available
  /{payeeId}:
    get:
      tags:
      - Customer Management - Payees
      summary: Get the details for a specific payee
      description: Retrieve the full detailed response of a known payee based on it's
        SmartBearCoin customer managemenent reference identifier.
      operationId: getPayeeById
      parameters:
      - name: payeeId
        in: path
        description: the SmartBearCoin customer managemenent reference identifier
          for the payee
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 1e331a0f-29bd-4b6b-8b21-8b87ed653c6b
      - name: x-Authorization
        in: header
        description: Contains the OAuth 2.0 ClientCredentials or AuthorizationCode
          Bearer Token to make authenticated/authorized API calls.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful Response - TODO - add domain schema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payee'
        "400":
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
              examples:
                Missing conditionally required request parameter:
                  value:
                    code: "4000020"
                    status: 400
                    type: https://api.smartbearcoin.com/problems/missing-request-parameter
                    title: missing-request-parameter
                    details:
                    - type: https://api.smartbearcoin.com/problems/missing-request-parameter
                      title: missing-request-parameter
                      detail: "The request does not contain the conditionally required\
                        \ parameter 'name', when 'jurisdiction_identifier' is not\
                        \ provided."
                      contextData:
                      - path: /name
                        condition: jurisdiction_identifier == null
                Invalid request parameter format:
                  value:
                    code: "4000022"
                    status: 400
                    type: https://api.smartbearcoin.com/problems/invalid-request-parameter-format
                    title: invalid-request-parameter-format
                    details:
                    - type: https://api.smartbearcoin.com/problems/invalid-request-parameter-format
                      title: invalid-request-parameter-format
                      detail: "The provided value [Ireland] for parameter 'country_of_registration'\
                        \ does not have the expected format."
                      contextData:
                      - path: /country_of_registration
                        providedValue: Ireland
                        allowedFormat: "^[a-zA-Z]{2}$"
                Invalid request parameter value:
                  value:
                    code: "4000023"
                    status: 400
                    type: https://api.smartbearcoin.com/problems/invalid-request-parameter-value
                    title: invalid-request-parameter-value
                    details:
                    - type: https://api.smartbearcoin.com/problems/invalid-request-parameter-value
                      title: invalid-request-parameter-value
                      detail: "The provided value [vat-number] for parameter 'jurisdiction_identifier_type'\
                        \ in country_of_registration [IT] is not allowed. The allowed\
                        \ values are [fiscal-code]."
                      contextData:
                      - path: /jurisdiction_identifier_type
                        providedValue: vat-number
                        allowedValues:
                        - fiscal-code
        "401":
          description: 401 Unauthorized
        "404":
          description: 404 Not Found
        "405":
          description: 405 Method Not Allowed
        "429":
          description: 429 Too Many Requests
        "500":
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
              examples:
                Internal Server Error due to a technical failure:
                  value:
                    code: "5000001"
                    status: 500
                    type: https://api.smartbearcoin.com/problems/internal-server-error
                    title: internal-server-error
                    details:
                    - type: https://api.smartbearcoin.com/problems/internal-server-error
                      title: internal-server-error
                      detail: The server encountered an internal error and was unable
                        to complete your request.
        "503":
          description: 503 Service Not Available
  /{payeeId}/transactions:
    get:
      tags:
      - Customer Management - Payee Transactions
      summary: Get the transaction history for a specific payee
      description: Retrieve the payment history transactions for a particular payee
      operationId: getPayeeTransactions
      parameters:
      - name: payeeId
        in: path
        description: the SmartBearCoin customer managemenent reference identifier
          for the payee
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 1e331a0f-29bd-4b6b-8b21-8b87ed653c6b
      - name: transaction_from
        in: query
        description: "Retrieve only transaction that were completed since a given\
          \ date. The value is a `date-time`. The ISO 8601 is applied.: time is in\
          \ UTC, Example: `2017-04-08T19:05:36Z`"
        required: false
        style: form
        explode: true
        schema:
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[012][0-9]:[0-5][0-9]:[0-5][0-9]Z$"
          type: string
          format: date-time
          example: 2021-04-08T19:05:36Z
      - name: transaction_until
        in: query
        description: "Retrieve only transaction that were completed since a given\
          \ date. The value is a `date-time`. The ISO 8601 is applied.: time is in\
          \ UTC, Example: `2017-04-08T19:05:36Z`"
        required: false
        style: form
        explode: true
        schema:
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[012][0-9]:[0-5][0-9]:[0-5][0-9]Z$"
          type: string
          format: date-time
          example: 2021-12-31T23:59:59Z
      - name: x-Authorization
        in: header
        description: Contains the OAuth 2.0 ClientCredentials or AuthorizationCode
          Bearer Token to make authenticated/authorized API calls.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
              examples:
                Missing conditionally required request parameter:
                  value:
                    code: "4000020"
                    status: 400
                    type: https://api.smartbearcoin.com/problems/missing-request-parameter
                    title: missing-request-parameter
                    details:
                    - type: https://api.smartbearcoin.com/problems/missing-request-parameter
                      title: missing-request-parameter
                      detail: "The request does not contain the conditionally required\
                        \ parameter 'name', when 'jurisdiction_identifier' is not\
                        \ provided."
                      contextData:
                      - path: /name
                        condition: jurisdiction_identifier == null
                Invalid request parameter format:
                  value:
                    code: "4000022"
                    status: 400
                    type: https://api.smartbearcoin.com/problems/invalid-request-parameter-format
                    title: invalid-request-parameter-format
                    details:
                    - type: https://api.smartbearcoin.com/problems/invalid-request-parameter-format
                      title: invalid-request-parameter-format
                      detail: "The provided value [Ireland] for parameter 'country_of_registration'\
                        \ does not have the expected format."
                      contextData:
                      - path: /country_of_registration
                        providedValue: Ireland
                        allowedFormat: "^[a-zA-Z]{2}$"
                Invalid request parameter value:
                  value:
                    code: "4000023"
                    status: 400
                    type: https://api.smartbearcoin.com/problems/invalid-request-parameter-value
                    title: invalid-request-parameter-value
                    details:
                    - type: https://api.smartbearcoin.com/problems/invalid-request-parameter-value
                      title: invalid-request-parameter-value
                      detail: "The provided value [vat-number] for parameter 'jurisdiction_identifier_type'\
                        \ in country_of_registration [IT] is not allowed. The allowed\
                        \ values are [fiscal-code]."
                      contextData:
                      - path: /jurisdiction_identifier_type
                        providedValue: vat-number
                        allowedValues:
                        - fiscal-code
        "401":
          description: 401 Unauthorized
        "404":
          description: 404 Not Found
        "405":
          description: 405 Method Not Allowed
        "429":
          description: 429 Too Many Requests
        "500":
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
              examples:
                Internal Server Error due to a technical failure:
                  value:
                    code: "5000001"
                    status: 500
                    type: https://api.smartbearcoin.com/problems/internal-server-error
                    title: internal-server-error
                    details:
                    - type: https://api.smartbearcoin.com/problems/internal-server-error
                      title: internal-server-error
                      detail: The server encountered an internal error and was unable
                        to complete your request.
        "503":
          description: 503 Service Not Available
components:
  schemas:
    local_SWIFT_payee:
      required:
      - account_name
      - any_bic
      - bank_name
      - iban
      type: object
      properties:
        account_name:
          maxLength: 35
          minLength: 3
          type: string
        iban:
          $ref: '#/components/schemas/IBAN2007Identifier'
        any_bic:
          $ref: '#/components/schemas/AnyBICDec2014Identifier'
        bank_account_currency:
          maxLength: 3
          minLength: 3
          pattern: "^[A-Z]{3,3}$"
          type: string
          description: |
            ISO three character currency code.

            The Currency Code must be registered, or have already been registered. Valid active or historic currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and may be or not be withdrawn on the day the message containing the Currency is exchanged.
        bank_name:
          $ref: '#/components/schemas/FinancialInstitutioIdentification'
        bank_code:
          type: string
    Payee:
      allOf:
      - $ref: '#/components/schemas/SWIFT_Payee'
      - type: object
        properties:
          id:
            type: string
          name:
            type: string
    Problem:
      title: Problem
      required:
      - code
      - status
      - title
      - type
      type: object
      properties:
        code:
          type: string
          description: an application-specific error code
        status:
          type: integer
          description: The HTTP status code generated by the origin server for this
            occurrence of the problem
        type:
          type: string
          description: A URI reference that identifies the problem type.
          enum:
          - https://api.smartbearcoin.com/problems/missing-request-header
          - https://api.smartbearcoin.com/problems/missing-request-parameter
          - https://api.smartbearcoin.com/problems/invalid-request-header-format
          - https://api.smartbearcoin.com/problems/invalid-request-parameter-format
          - https://api.smartbearcoin.com/problems/invalid-request-parameter-value
          - https://api.smartbearcoin.com/problems/internal-server-error
        title:
          type: string
          description: "a short, human-readable summary of the problem that SHOULD\
            \ NOT change from occurrence to occurrence of the problem, except for\
            \ purposes of localization"
          enum:
          - missing-request-header
          - missing-request-parameter
          - invalid-request-header-format
          - invalid-request-parameter-format
          - invalid-request-parameter-value
          - internal-server-error
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of
            the problem
        details:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Problem_details'
      description: |
        Problem object provides detailed information about an errors that occurred during an api call execution.
        This problem object is conform the standard specifications, see https://tools.ietf.org/html/rfc7807.
        The extensions on the standard are the `contextData` providing context data and `details` arrays.
    Pagination:
      required:
      - page
      - pageCount
      - pageSize
      - recordCount
      type: object
      properties:
        page:
          type: integer
          description: Current page number.
        pageSize:
          type: integer
          description: "Number of records provided on a single page, page size."
        recordCount:
          type: integer
          description: Total number of records found in the search result.
        pageCount:
          type: integer
          description: "Total number of pages found in the search result, based on\
            \ the `pageSize`."
        links:
          type: array
          items:
            $ref: '#/components/schemas/Pagination_links'
      description: paginate schema for use across plural resources
    SWIFT_Payee:
      required:
      - account_name
      - any_bic
      - bank_name
      - iban
      type: object
      properties:
        account_name:
          maxLength: 35
          minLength: 3
          type: string
        iban:
          $ref: '#/components/schemas/IBAN2007Identifier'
        any_bic:
          $ref: '#/components/schemas/AnyBICDec2014Identifier'
        bank_account_currency:
          maxLength: 3
          minLength: 3
          pattern: "^[A-Z]{3,3}$"
          type: string
          description: |
            ISO three character currency code.

            The Currency Code must be registered, or have already been registered. Valid active or historic currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and may be or not be withdrawn on the day the message containing the Currency is exchanged.
        bank_name:
          $ref: '#/components/schemas/FinancialInstitutioIdentification'
        bank_code:
          type: string
    IBAN2007Identifier:
      pattern: "^[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}$"
      type: string
      description: "An identifier used internationally by financial institutions to\
        \ uniquely identify the account of a customer at a financial institution,\
        \ as described in the latest edition of the international standard ISO 13616:\
        \ 2007 - \"Banking and related financial services - International Bank Account\
        \ Number (IBAN)\"."
      example: IE01AIBK935955939393
    AnyBICDec2014Identifier:
      pattern: "^[A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}$"
      type: string
      description: "Code allocated to a financial or non-financial institution by\
        \ the ISO 9362 Registration Authority, as described in ISO 9362: 2014 - \"\
        Banking - Banking telecommunication messages - Business identifier code (BIC)\"\
        ."
    FinancialInstitutioIdentification:
      type: string
      example: AAAA Bank
    inline_response_200:
      required:
      - data
      - links
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Payee'
        links:
          $ref: '#/components/schemas/Pagination'
    inline_response_200_1:
      required:
      - data
      - links
      type: object
      properties:
        data:
          type: string
        links:
          $ref: '#/components/schemas/Pagination'
    Problem_contextData:
      required:
      - path
      type: object
      properties:
        path:
          type: string
        providedValue:
          type: string
        allowedValues:
          type: array
          items:
            type: string
        allowedFormat:
          type: string
        condition:
          type: string
    Problem_details:
      required:
      - detail
      - title
      - type
      type: object
      properties:
        type:
          type: string
          description: A URI reference that identifies the problem type.
          enum:
          - https://api.smartbearcoin.com/problems/missing-request-header
          - https://api.smartbearcoin.com/problems/missing-request-parameter
          - https://api.smartbearcoin.com/problems/invalid-request-header-format
          - https://api.smartbearcoin.com/problems/invalid-request-parameter-format
          - https://api.smartbearcoin.com/problems/invalid-request-parameter-value
          - https://api.smartbearcoin.com/problems/internal-server-error
        title:
          type: string
          description: "a short, human-readable summary of the problem that SHOULD\
            \ NOT change from occurrence to occurrence of the problem, except for\
            \ purposes of localization"
          enum:
          - missing-request-header
          - missing-request-parameter
          - invalid-request-header-format
          - invalid-request-parameter-format
          - invalid-request-parameter-value
          - internal-server-error
        detail:
          type: string
          description: "A human-readable explanation specific to this occurrence of\
            \ the problem. Like title, this field value can be localized."
        contextData:
          type: array
          items:
            $ref: '#/components/schemas/Problem_contextData'
    Pagination_links:
      required:
      - last
      - self
      type: object
      properties:
        self:
          type: string
          description: The canonical URL for the current page
          format: url
        next:
          type: string
          description: "The canonical URL for the next page, if available"
          format: url
        previous:
          type: string
          description: "The canonical URL for the previous page, if available"
          format: url
        last:
          type: string
          description: The canonical URL for the last page
          format: url
  responses:
    "400BadRequest":
      description: 400 Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            Missing conditionally required request parameter:
              value:
                code: "4000020"
                status: 400
                type: https://api.smartbearcoin.com/problems/missing-request-parameter
                title: missing-request-parameter
                details:
                - type: https://api.smartbearcoin.com/problems/missing-request-parameter
                  title: missing-request-parameter
                  detail: "The request does not contain the conditionally required\
                    \ parameter 'name', when 'jurisdiction_identifier' is not provided."
                  contextData:
                  - path: /name
                    condition: jurisdiction_identifier == null
            Invalid request parameter format:
              value:
                code: "4000022"
                status: 400
                type: https://api.smartbearcoin.com/problems/invalid-request-parameter-format
                title: invalid-request-parameter-format
                details:
                - type: https://api.smartbearcoin.com/problems/invalid-request-parameter-format
                  title: invalid-request-parameter-format
                  detail: "The provided value [Ireland] for parameter 'country_of_registration'\
                    \ does not have the expected format."
                  contextData:
                  - path: /country_of_registration
                    providedValue: Ireland
                    allowedFormat: "^[a-zA-Z]{2}$"
            Invalid request parameter value:
              value:
                code: "4000023"
                status: 400
                type: https://api.smartbearcoin.com/problems/invalid-request-parameter-value
                title: invalid-request-parameter-value
                details:
                - type: https://api.smartbearcoin.com/problems/invalid-request-parameter-value
                  title: invalid-request-parameter-value
                  detail: "The provided value [vat-number] for parameter 'jurisdiction_identifier_type'\
                    \ in country_of_registration [IT] is not allowed. The allowed\
                    \ values are [fiscal-code]."
                  contextData:
                  - path: /jurisdiction_identifier_type
                    providedValue: vat-number
                    allowedValues:
                    - fiscal-code
    "500InternalServerError":
      description: 500 Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            Internal Server Error due to a technical failure:
              value:
                code: "5000001"
                status: 500
                type: https://api.smartbearcoin.com/problems/internal-server-error
                title: internal-server-error
                details:
                - type: https://api.smartbearcoin.com/problems/internal-server-error
                  title: internal-server-error
                  detail: The server encountered an internal error and was unable
                    to complete your request.
  parameters:
    country_of_registration:
      name: country_of_registration
      in: query
      description: "The country in which the legalentity is registered, expressed\
        \ in official (ISO) two-letter country code."
      required: true
      schema:
        pattern: "^[a-zA-Z]{2}$"
        type: string
